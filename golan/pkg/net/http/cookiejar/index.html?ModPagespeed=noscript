<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>cookiejar - The Go Programming Language</title>

<script type='text/javascript'>window.mod_pagespeed_start = Number(new Date());</script><link type="text/css" rel="stylesheet" href="http://1-ps.googleusercontent.com/x/s.golang-org.appspot.com/golang.org/lib/godoc/A.style.css.pagespeed.cf.NnmSRHJsAc.css">

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml"/>

<script type="text/javascript">window.initFuncs=[];</script>
<script type="text/javascript">var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-11222381-2"]);_gaq.push(["_trackPageview"]);</script>
<style>#feedback{display:block;float:right;margin-right:20px;padding:5px;font-size:14px;background:#e0ebf5;border:1px solid #e0ebf5;-webkit-border-bottom-left-radius:5px;-webkit-border-bottom-right-radius:5px;-moz-border-radius-bottomleft:5px;-moz-border-radius-bottomright:5px;border-bottom-left-radius:5px;border-bottom-right-radius:5px}</style><link rel="dns-prefetch" href="//ajax.googleapis.com"><link rel="dns-prefetch" href="//www.gstatic.com"><link rel="canonical" href="http://golang.org/pkg/net/http/cookiejar/"/></head>
<body>

<div id="topbar" class="wide"><div class="container">

<form method="GET" action="/search">
<div id="menu">
<a href="/doc/">Documents</a>
<a href="/ref/">References</a>
<a href="/pkg/">Packages</a>
<a href="/project/">The Project</a>
<a href="/help/">Help</a>

<a id="playgroundButton" href="http://play.golang.org/" title="Show Go Playground">Play</a>

<input type="text" id="search" name="q" class="inactive" value="Search" placeholder="Search">
</div>
<div id="heading"><a href="/">The Go Programming Language</a></div>
</form>

</div></div>


<div id="playground" class="play">
	<div class="input"><textarea class="code">package main

import "fmt"

func main() {
	fmt.Println("Hello, 世界")
}</textarea></div>
	<div class="output"></div>
	<div class="buttons">
		<a class="run" title="Run this code [shift-enter]">Run</a>
		<a class="fmt" title="Format this code">Format</a>
		<a class="share" title="Share this code">Share</a>
	</div>
</div>


<div id="page" class="wide">
<div class="container">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package cookiejar</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->
<!--
	Note: Static (i.e., not template-generated) href and id
	attributes start with "pkg-" to make it impossible for
	them to conflict with generated attributes (some of which
	correspond to Go identifiers).
-->

	
		
		<div id="short-nav">
			<dl>
			<dd><code>import "net/http/cookiejar"</code></dd>
			</dl>
			<dl>
			<dd><a href="#pkg-overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#pkg-index" class="indexLink">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="pkg-overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ▹</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ▾</h2>
				<p>
Package cookiejar implements an in-memory RFC 6265-compliant http.CookieJar.
</p>

			</div>
		</div>
		

		<div id="pkg-index" class="toggleVisible">
		<div class="collapsed">
			<h2 class="toggleButton" title="Click to show Index section">Index ▹</h2>
		</div>
		<div class="expanded">
			<h2 class="toggleButton" title="Click to hide Index section">Index ▾</h2>

		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
			<div id="manual-nav">
			<dl>
			
			
			
			
				
				<dd><a href="#Jar">type Jar</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#New">func New(o *Options) (*Jar, error)</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#Jar.Cookies">func (j *Jar) Cookies(u *url.URL) (cookies []*http.Cookie)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Jar.SetCookies">func (j *Jar) SetCookies(u *url.URL, cookies []*http.Cookie)</a></dd>
				
			
				
				<dd><a href="#Options">type Options</a></dd>
				
				
			
				
				<dd><a href="#PublicSuffixList">type PublicSuffixList</a></dd>
				
				
			
			
			</dl>
			</div><!-- #manual-nav -->

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="/src/pkg/net/http/cookiejar/jar.go">jar.go</a>
			
				<a href="/src/pkg/net/http/cookiejar/punycode.go">punycode.go</a>
			
			</span>
			</p>
		
		</div><!-- .expanded -->
		</div><!-- #pkg-index -->

		
		
		
		
			
			
			<h2 id="Jar">type <a href="/src/pkg/net/http/cookiejar/jar.go?s=1965:2309#L50">Jar</a></h2>
			<pre>type Jar struct {
        <span class="comment">// contains filtered or unexported fields</span>
}</pre>
			<p>
Jar implements the http.CookieJar interface from the net/http package.
</p>


			

			

			

			
				
				<h3 id="New">func <a href="/src/pkg/net/http/cookiejar/jar.go?s=2395:2429#L67">New</a></h3>
				<pre>func New(o *<a href="#Options">Options</a>) (*<a href="#Jar">Jar</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				<p>
New returns a new cookie jar. A nil *Options is equivalent to a zero
Options.
</p>

				
			

			
				
				<h3 id="Jar.Cookies">func (*Jar) <a href="/src/pkg/net/http/cookiejar/jar.go?s=5182:5240#L161">Cookies</a></h3>
				<pre>func (j *<a href="#Jar">Jar</a>) Cookies(u *<a href="/pkg/net/url/">url</a>.<a href="/pkg/net/url/#URL">URL</a>) (cookies []*<a href="/pkg/net/http/">http</a>.<a href="/pkg/net/http/#Cookie">Cookie</a>)</pre>
				<p>
Cookies implements the Cookies method of the http.CookieJar interface.
</p>
<p>
It returns an empty slice if the URL&#39;s scheme is not HTTP or HTTPS.
</p>

				
				
			
				
				<h3 id="Jar.SetCookies">func (*Jar) <a href="/src/pkg/net/http/cookiejar/jar.go?s=6515:6575#L225">SetCookies</a></h3>
				<pre>func (j *<a href="#Jar">Jar</a>) SetCookies(u *<a href="/pkg/net/url/">url</a>.<a href="/pkg/net/url/#URL">URL</a>, cookies []*<a href="/pkg/net/http/">http</a>.<a href="/pkg/net/http/#Cookie">Cookie</a>)</pre>
				<p>
SetCookies implements the SetCookies method of the http.CookieJar interface.
</p>
<p>
It does nothing if the URL&#39;s scheme is not HTTP or HTTPS.
</p>

				
				
			
		
			
			
			<h2 id="Options">type <a href="/src/pkg/net/http/cookiejar/jar.go?s=1545:1889#L39">Options</a></h2>
			<pre>type Options struct {
        <span class="comment">// PublicSuffixList is the public suffix list that determines whether</span>
        <span class="comment">// an HTTP server can set a cookie for a domain.</span>
        <span class="comment">//</span>
        <span class="comment">// A nil value is valid and may be useful for testing but it is not</span>
        <span class="comment">// secure: it means that the HTTP server for foo.co.uk can set a cookie</span>
        <span class="comment">// for bar.co.uk.</span>
        PublicSuffixList <a href="#PublicSuffixList">PublicSuffixList</a>
}</pre>
			<p>
Options are the options for creating a new Jar.
</p>


			

			

			

			

			
		
			
			
			<h2 id="PublicSuffixList">type <a href="/src/pkg/net/http/cookiejar/jar.go?s=1011:1492#L24">PublicSuffixList</a></h2>
			<pre>type PublicSuffixList interface {
        <span class="comment">// PublicSuffix returns the public suffix of domain.</span>
        <span class="comment">//</span>
        <span class="comment">// TODO: specify which of the caller and callee is responsible for IP</span>
        <span class="comment">// addresses, for leading and trailing dots, for case sensitivity, and</span>
        <span class="comment">// for IDN/Punycode.</span>
        PublicSuffix(domain <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#string">string</a>

        <span class="comment">// String returns a description of the source of this public suffix</span>
        <span class="comment">// list. The description will typically contain something like a time</span>
        <span class="comment">// stamp or version number.</span>
        String() <a href="/pkg/builtin/#string">string</a>
}</pre>
			<p>
PublicSuffixList provides the public suffix of a domain. For example:
</p>
<pre>- the public suffix of &#34;example.com&#34; is &#34;com&#34;,
- the public suffix of &#34;foo1.foo2.foo3.co.uk&#34; is &#34;co.uk&#34;, and
- the public suffix of &#34;bar.pvt.k12.ma.us&#34; is &#34;pvt.k12.ma.us&#34;.
</pre>
<p>
Implementations of PublicSuffixList must be safe for concurrent use by
multiple goroutines.
</p>
<p>
An implementation that always returns &#34;&#34; is valid and may be useful for
testing but it is not secure: it means that the HTTP server for foo.com can
set a cookie for bar.com.
</p>
<p>
A public suffix list implementation is in the package
code.google.com/p/go.net/publicsuffix.
</p>


			

			

			

			

			
		
	

	







<div id="footer">
Build version go1.1.2.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>

<script type="text/javascript" src="http://1-ps.googleusercontent.com/x/s.golang-org.appspot.com/golang.org/lib/godoc/playground.js.pagespeed.jm.Up9d4M3oKE.js"></script>

<script type="text/javascript" src="/lib/godoc/godocs.js"></script>

<script type="text/javascript" src="//www.gstatic.com/feedback/api.js"></script>
<script type="text/javascript">$(function(){if(!$('#topbar').is('.wide'))return;$('<a href="#feedback" id="feedback">Send Feedback</a>').insertAfter('#topbar');$('#feedback').click(function(){userfeedback.api.startFeedback({'productId':'92634','bucket':'godoc'});return false;});});</script>



<script type="text/javascript">(function(){var ga=document.createElement("script");ga.type="text/javascript";ga.async=true;ga.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(ga,s);})();</script>
<script pagespeed_no_defer="">(function(){var e=window,f=Math,g="round",h="performance",k="&rit_script=",r="&rit_link=",y="&rit_img=",z="&rit_css=",A="&nttfb=",B="&nfd=",C="&ndt=",D="&nct=",E="&nbt=",F="&mfd=",G="&attfb=",H="&afd=",I="&adt=",J="&act=",K="&abt=",L="";e.pagespeed=e.pagespeed||{};var M=e.pagespeed;
M.getResourceTimingData=function(){if(e[h]&&(e[h].getEntries||e[h].webkitGetEntries)){for(var s=0,t=0,l=0,u=0,m=0,v=0,n=0,w=0,p=0,x=0,q=0,c={},d=e[h].getEntries?e[h].getEntries():e[h].webkitGetEntries(),b=0;b<d.length;b++){var a=d[b].duration;0<a&&(s+=a,++l,t=f.max(t,a));a=d[b].connectEnd-d[b].connectStart;0<a&&(v+=a,++n);a=d[b].domainLookupEnd-d[b].domainLookupStart;0<a&&(u+=a,++m);a=d[b].initiatorType;c[a]?++c[a]:c[a]=1;a=d[b].requestStart-d[b].fetchStart;0<a&&(x+=a,++q);a=d[b].responseStart-d[b].requestStart;
0<a&&(w+=a,++p)}return H+(l?f[g](s/l):0)+B+l+F+f[g](t)+J+(n?f[g](v/n):0)+D+n+I+(m?f[g](u/m):0)+C+m+K+(q?f[g](x/q):0)+E+q+G+(p?f[g](w/p):0)+A+p+(c.css?z+c.css:L)+(c.link?r+c.link:L)+(c.script?k+c.script:L)+(c.img?y+c.img:L)}return L};M.getResourceTimingData=M.getResourceTimingData;})();
(function(){var c=encodeURIComponent,f=window,h="performance",k="unload:",l="on",m="load:",n="load",p="ets=",q="beforeunload",r="EventStart",s="?",t="=",u="&url=",v="&ttfb=",w="&req_start=",x="&ref=",y="&r",z="&nt=",A="&nrp=",B="&nav=",C="&ifr=1",D="&ifr=0",E="&htmlAt=",F="&fp=",G="&dwld=",H="&dom_c=",I="&dns=",J="&connect=",K="&ccul=",L="&ccrl=",M="&ccos=",N="&ccis=",O="&cces=",P="&b_csi=",Q="&",R="";f.pagespeed=f.pagespeed||{};var S=f.pagespeed,T=function(a,d,b,e){this.d=a;this.a=d;this.b=b;this.e=e};S.beaconUrl=R;
T.prototype.c=function(){var a=this.d,d=f.mod_pagespeed_start,b=Number(new Date)-d,a=a+(-1==a.indexOf(s)?s:Q),a=a+p+(this.a==n?m:k),a=a+b;if(this.a!=q||!f.mod_pagespeed_loaded){a+=y+this.a+t;if(f[h]){var b=f[h].timing,e=b.navigationStart,g=b.requestStart,a=a+(b[this.a+r]-e),a=a+(B+(b.fetchStart-e)),a=a+(I+(b.domainLookupEnd-b.domainLookupStart)),a=a+(J+(b.connectEnd-b.connectStart)),a=a+(w+(g-e)),a=a+(v+(b.responseStart-g)),a=a+(G+(b.responseEnd-b.responseStart)),a=a+(H+(b.domContentLoadedEventStart-
e));f[h].navigation&&(a+=z+f[h].navigation.type);e=-1;b.msFirstPaint?e=b.msFirstPaint:f.chrome&&f.chrome.loadTimes&&(e=Math.floor(1E3*f.chrome.loadTimes().firstPaintTime));e-=g;0<=e&&(a+=F+e)}else a+=b;S.getResourceTimingData&&f.parent==f&&(a+=S.getResourceTimingData());a+=f.parent!=f?C:D;this.a==n&&(f.mod_pagespeed_loaded=!0,(b=f.mod_pagespeed_num_resources_prefetched)&&(a+=A+b),(b=f.mod_pagespeed_prefetch_start)&&(a+=E+(d-b)));S.panelLoader&&(d=S.panelLoader.getCsiTimingsString(),d!=R&&(a+=P+d));
S.criticalCss&&(d=S.criticalCss,a+=N+d.total_critical_inlined_size+O+d.total_original_external_size+M+d.total_overhead_size+L+d.num_replaced_links+K+d.num_unreplaced_links);this.b!=R&&(a+=this.b);document.referrer&&(a+=x+c(document.referrer));a+=u+c(this.e);S.beaconUrl=a;(new Image).src=a}};S.f=function(a,d,b,e){var g=new T(a,d,b,e);f.addEventListener?f.addEventListener(d,function(){g.c()},!1):f.attachEvent(l+d,function(){g.c()})};S.addInstrumentationInit=S.f;})();

pagespeed.addInstrumentationInit('http://1-ps.googleusercontent.com/beacon?org=104_1_vo', 'load', '&ft=40&id=1376730225669932', 'http://golang.org/pkg/net/http/cookiejar/');</script></body>
</html>

